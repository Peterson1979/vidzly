import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { useState, useEffect } from 'react';
import { useTheme } from '../contexts/ThemeContext';
import { useSubscription } from '../contexts/SubscriptionContext';
// import { useLogo } from '../contexts/LogoContext'; // Removed
import { SunIcon, MoonIcon, SparklesIcon, CheckCircleIcon, NotificationBellIcon, SettingsIcon, TrophyAwardIcon, FolderIcon
// UploadIcon, TrashIcon // Removed as they were only for logo upload
 } from '../components/Icons';
import { APP_NAME } from '../constants'; // DEFAULT_LOGO_SVG_STRING might not be needed here anymore
import { SubscriptionTier } from '../types';
import { getNotificationPreferences, saveNotificationPreferences } from '../services/notificationService';
export const SettingsView = ({ onOpenSubscriptionModal, onNavigateToView }) => {
    const { theme, toggleTheme, setTheme } = useTheme();
    const { isSubscribed, tier } = useSubscription();
    // const { customLogoUrl, defaultLogoSvgString, setCustomLogo } = useLogo(); // Removed useLogo
    const [notificationPrefs, setNotificationPrefs] = useState(getNotificationPreferences());
    // const [logoUploadError, setLogoUploadError] = useState<string | null>(null); // Removed
    // const fileInputRef = useRef<HTMLInputElement>(null); // Removed
    useEffect(() => {
        saveNotificationPreferences(notificationPrefs);
    }, [notificationPrefs]);
    const handleNotificationPrefChange = (key, value) => {
        setNotificationPrefs(prev => ({ ...prev, [key]: value }));
    };
    const handleMasterToggleChange = (value) => {
        const newPrefs = { ...notificationPrefs, allEnabled: value };
        setNotificationPrefs(newPrefs);
    };
    // Removed handleLogoUpload function
    // Removed handleRemoveCustomLogo function
    const SettingItem = ({ title, children, icon, className }) => (_jsxs("div", { className: `bg-white dark:bg-gray-800 p-4 sm:p-6 rounded-lg shadow-md dark:shadow-gray-700/50 ${className}`, children: [_jsxs("h3", { className: "text-lg font-semibold text-text-light dark:text-text-dark mb-3 flex items-center", children: [icon && _jsx("span", { className: "mr-3 text-brand-orange", children: icon }), title] }), children] }));
    const ToggleSwitch = ({ id, checked, onChange, label, description, disabled = false }) => (_jsxs("div", { className: `flex items-center justify-between py-2 ${disabled ? 'opacity-60' : ''}`, children: [_jsxs("div", { children: [_jsx("label", { htmlFor: id, className: `font-medium text-text-light dark:text-text-dark ${disabled ? 'cursor-not-allowed' : 'cursor-pointer'}`, children: label }), description && _jsx("p", { className: "text-xs text-gray-500 dark:text-gray-400", children: description })] }), _jsxs("button", { id: id, role: "switch", "aria-checked": checked, onClick: () => !disabled && onChange(!checked), disabled: disabled, className: `${checked && !disabled ? 'bg-brand-orange' : 'bg-gray-300 dark:bg-gray-600'} 
                    relative inline-flex flex-shrink-0 h-6 w-11 border-2 border-transparent rounded-full 
                    ${disabled ? 'cursor-not-allowed' : 'cursor-pointer'}
                    transition-colors ease-in-out duration-200 focus:outline-none focus:ring-2 focus:ring-offset-2 
                    focus:ring-brand-orange dark:focus:ring-offset-gray-800`, children: [_jsx("span", { className: "sr-only", children: "Use setting" }), _jsx("span", { "aria-hidden": "true", className: `${checked && !disabled ? 'translate-x-5' : 'translate-x-0'} 
                      pointer-events-none inline-block h-5 w-5 rounded-full bg-white shadow transform ring-0 
                      transition ease-in-out duration-200` })] })] }));
    const appVersion = "1.1.0";
    return (_jsxs("div", { className: "space-y-6 pb-20 text-text-light dark:text-text-dark max-w-2xl mx-auto", children: [_jsxs("div", { className: "text-center my-6", children: [_jsx(SettingsIcon, { className: "w-12 h-12 sm:w-16 sm:h-16 mx-auto text-brand-orange dark:text-orange-400 mb-3" }), _jsx("h2", { className: "text-2xl sm:text-3xl font-bold text-text-light dark:text-text-dark", children: "App Settings" }), _jsxs("p", { className: "text-sm text-gray-600 dark:text-gray-400 mt-1", children: ["Customize your ", APP_NAME, " experience."] })] }), _jsx(SettingItem, { title: "Appearance", icon: _jsx(SunIcon, { className: "w-5 h-5" }), children: _jsxs("div", { className: "flex items-center justify-between", children: [_jsx("p", { className: "text-sm", children: "Theme" }), _jsxs("div", { className: "flex items-center space-x-2 p-1 bg-gray-100 dark:bg-gray-700 rounded-lg", children: [_jsxs("button", { onClick: () => setTheme('light'), className: `px-3 py-1.5 rounded-md text-sm font-medium transition-colors ${theme === 'light' ? 'bg-white dark:bg-gray-500 text-brand-orange shadow' : 'text-gray-600 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-600'}`, "aria-pressed": theme === 'light', children: [_jsx(SunIcon, { className: "w-5 h-5 inline mr-1" }), " Light"] }), _jsxs("button", { onClick: () => setTheme('dark'), className: `px-3 py-1.5 rounded-md text-sm font-medium transition-colors ${theme === 'dark' ? 'bg-gray-800 text-brand-orange shadow' : 'text-gray-600 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-600'}`, "aria-pressed": theme === 'dark', children: [_jsx(MoonIcon, { className: "w-5 h-5 inline mr-1" }), " Dark"] })] })] }) }), _jsxs(SettingItem, { title: "Notifications", icon: _jsx(NotificationBellIcon, { className: "w-5 h-5" }), children: [_jsx(ToggleSwitch, { id: "allNotifications", checked: notificationPrefs.allEnabled, onChange: handleMasterToggleChange, label: "Enable All Notifications (Browser Push)" }), _jsx("div", { className: "border-t border-gray-200 dark:border-gray-700 my-3" }), _jsx(ToggleSwitch, { id: "dailyHotContent", checked: notificationPrefs.dailyHotContent, onChange: (val) => handleNotificationPrefChange('dailyHotContent', val), label: "Daily Hot Content", description: "Get a quick daily alert with today's most trending or viral video.", disabled: !notificationPrefs.allEnabled && !notificationPrefs.inAppShowContent }), _jsx(ToggleSwitch, { id: "weeklyTopList", checked: notificationPrefs.weeklyTopList, onChange: (val) => handleNotificationPrefChange('weeklyTopList', val), label: "Weekly Top Picks", description: "Receive a weekly roundup of the best videos you might\u2019ve missed.", disabled: !notificationPrefs.allEnabled && !notificationPrefs.inAppShowContent }), _jsx(ToggleSwitch, { id: "inactivityReengagement", checked: notificationPrefs.inactivityReengagement, onChange: (val) => handleNotificationPrefChange('inactivityReengagement', val), label: "We Miss You!", description: "We\u2019ll give you a friendly reminder if you haven\u2019t visited in a while.", disabled: !notificationPrefs.allEnabled && !notificationPrefs.inAppShowEngagement }), _jsx(ToggleSwitch, { id: "humorousSurprising", checked: notificationPrefs.humorousSurprising, onChange: (val) => handleNotificationPrefChange('humorousSurprising', val), label: "Fun & Surprise Alerts", description: "Occasional fun, unexpected or quirky video suggestions to make your day.", disabled: !notificationPrefs.allEnabled && !notificationPrefs.inAppShowContent }), _jsx(ToggleSwitch, { id: "gamificationNotifications", checked: notificationPrefs.gamification, onChange: (val) => handleNotificationPrefChange('gamification', val), label: "Badges & Streaks Alerts", description: "Get notified about your achievements and viewing streaks.", disabled: !notificationPrefs.allEnabled && !notificationPrefs.inAppShowEngagement }), _jsxs("div", { className: "mt-4 pt-3 border-t border-gray-200 dark:border-gray-700", children: [_jsx("p", { className: "text-sm font-medium text-text-light dark:text-text-dark mb-1", children: "In-App Notification Visibility:" }), _jsx(ToggleSwitch, { id: "inAppSystem", checked: notificationPrefs.inAppShowSystem, onChange: (val) => handleNotificationPrefChange('inAppShowSystem', val), label: "System & Feature Updates", description: "Show in-app messages about new features or app changes." }), _jsx(ToggleSwitch, { id: "inAppContent", checked: notificationPrefs.inAppShowContent, onChange: (val) => handleNotificationPrefChange('inAppShowContent', val), label: "New Content Alerts", description: "Show in-app messages for daily/weekly picks, curated feeds." }), _jsx(ToggleSwitch, { id: "inAppEngagement", checked: notificationPrefs.inAppShowEngagement, onChange: (val) => handleNotificationPrefChange('inAppShowEngagement', val), label: "Engagement & Gamification", description: "Show in-app messages for streaks, badges, reminders." })] })] }), _jsxs(SettingItem, { title: "Account & Achievements", icon: _jsx(FolderIcon, { className: "w-5 h-5" }), children: [isSubscribed ? (_jsxs("div", { className: "flex items-center justify-between mb-4", children: [_jsxs("div", { children: [_jsxs("p", { className: "font-medium", children: [APP_NAME, " Premium Active!"] }), _jsxs("p", { className: "text-sm text-gray-500 dark:text-gray-400", children: ["You are on the ", tier === SubscriptionTier.MONTHLY ? 'Monthly' : 'Yearly', " plan."] })] }), _jsx(CheckCircleIcon, { className: "w-8 h-8 text-green-500" })] })) : (_jsxs("div", { children: [_jsxs("p", { className: "text-sm text-gray-600 dark:text-gray-400 mb-3", children: ["Unlock an ad-free experience and support ", APP_NAME, "."] }), _jsxs("button", { onClick: onOpenSubscriptionModal, className: "w-full bg-brand-orange text-white font-semibold py-2.5 px-4 rounded-lg hover:bg-orange-600 transition-colors flex items-center justify-center mb-4", children: [_jsx(SparklesIcon, { className: "w-5 h-5 mr-2" }), "Go Premium"] })] })), _jsxs("button", { onClick: () => onNavigateToView('achievements'), className: "w-full bg-gray-200 dark:bg-gray-700 text-text-light dark:text-text-dark font-semibold py-2.5 px-4 rounded-lg hover:bg-gray-300 dark:hover:bg-gray-600 transition-colors flex items-center justify-center", children: [_jsx(TrophyAwardIcon, { className: "w-5 h-5 mr-2" }), "View Achievements"] })] }), _jsx("div", { className: "text-center text-xs text-gray-500 dark:text-gray-400 pt-4", children: _jsxs("p", { children: [APP_NAME, " Version ", appVersion] }) })] }));
};
